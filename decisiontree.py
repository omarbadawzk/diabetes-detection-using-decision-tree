# -*- coding: utf-8 -*-
"""DecisionTree.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gE_-BI_4vhnSyL0bAKgW1y1yXVeytKMf
"""

import pandas as pd
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, confusion_matrix, ConfusionMatrixDisplay

DB=pd.read_csv('/content/diabetes.csv')
DB.info()

DB.head()

features=['Pregnancies','Glucose','BloodPressure','SkinThickness','Insulin','BMI','DiabetesPedigreeFunction','Age']
X=DB[features]
y=DB.Outcome

X_train ,X_test,y_train,y_test=train_test_split(X,y,test_size=0.7,random_state=42)

DT= DecisionTreeClassifier()


DT= DT.fit(X_train,y_train)


y_pred=DT.predict(X_test)

from sklearn.metrics import accuracy_score

print(accuracy_score(y_test,y_pred))

cm = confusion_matrix(y_test, y_pred, labels=DT.classes_)
disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=DT.classes_)
disp.plot()

classification_report = classification_report(y_test, y_pred)
print(classification_report)

from skl2onnx import convert_sklearn
from skl2onnx.common.data_types import FloatTensorType
initial_type = [('input', FloatTensorType([None, 8]))]

onx_model = convert_sklearn(DT, initial_types=initial_type)

with open("diabetes_model.onnx", "wb") as f:
    f.write(onx_model.SerializeToString())